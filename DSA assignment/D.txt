//Parenthesis

#include<iostream>
using namespace std;
class stack
{
	private:
	int top;
	char c[30];
	public:
	stack()
	{
		top=-1;
	}
	void push(char ch)
	{
		if(top>29)
		{
			cout<<"Overflow"<<endl;
		}
		else
		{
			top++;
			c[top]=ch;
		}
	}
	char pop()
	{
		if(top<=-1)
		{
			cout<<"Underflow"<<endl;
		}
		else
		{
			return c[top--];
		}
	}
};

int main()
{
	int t=0,k=0;
	stack s;
	char temp[30];
	cout<<"\n Enter expression "<<endl;
	cin>>temp;
	for(int i=0;i!=29;i++)
	{
		if(temp[i]=='{')
		{
			s.push(temp[i]);
			t++;
		}
		if(temp[i]=='(')
		{
			s.push(temp[i]);
			t++;
		}
		if(temp[i]=='[')
		{
			s.push(temp[i]);
			t++;
		}
		if(temp[i]=='}')
		{
			if(s.pop()=='{')
			{
				k++;
			}
		}
		else if(temp[i]==']')
		{
			if(s.pop()=='[')
			{
				k++;
			}
		}
		else if(temp[i]==')')
		{
			if(s.pop()=='(')
			{
				k++;
			}
		}
	}

	if(t==k)
	cout<<"VALID";
	else
	cout<<"INVALID";

}





//Average

#include <iostream>
using namespace std;

class Test
{
    int dsa[30],i,j,n,sum,cnt[50],k,rn[30];
    float av;
public:
    Test()
    {
        i=j=n=0;
        av=sum=k=0;
    }
    void getdata();
    void show();
    void avg();
    void Ab_stud();
    void HS_LS();
    void MS_score();
};



void Test::getdata()
{
    cout<<"\nHow many student in SE Comp Div: A : ";
    cin>>n;
    cout<<"\n\t-----------------------------------------------------";
    cout<<"\n\tEnter the marks scored for first test of subject DSA: ";
    cout<<"\n\t-----------------------------------------------------";
    cout<<"\n\nStudent who remains Absent for the test please enter -1 for them:";
    cout<<"\n                     -------------------------------------         ";
    for(i=0;i<n;i++)
    {
     cout<<"\nEnter the marks of Roll no: "<<i+1<<" : ";
     cin>>dsa[i];
    }
}

void Test::MS_score()
{
    for(i=0;i<50;i++)
    {
        cnt[i]=0;
    }
    for(i=0;i<50;i++)
    {
        for(j=0;j<n;j++)
        {
            if(dsa[j]==i)
            {
                cnt[i]=cnt[i]+1;
            }
        }
    }

    cout<<"\n\n Marks Scored by most of the student in test are: \n";

    k=0;
    j=0;
        int max=cnt[j];
    for(i=0;i<50;i++)
    {
     if(cnt[i]>=max)
     {
         max=cnt[i];
         k=i;
     }
    }
    cout<<"\n\nMAximum marks "<<k<<" scored by "<<max <<" Students...\n";
    for(i=0;i<n;i++)
    {
        if(dsa[i]==k)
        {
            rn[j]=i;
            j++;
        }
    }
    cout<<"\n\n Students Roll Number are as follows..\n\n";
    for(i=0;i<j;i++)
    {
        cout<<"\t"<<rn[i]+1;
    }
}

void Test::show()
{
    cout<<"\n\nFirst Test Marks of Subject DSA are as follows...\n";
    cout<<"\n*********************************\n";
    cout<<"|  Roll No\t"<<"|"<<" DSA Marks     |";
    cout<<"\n*********************************\n";
    for(i=0;i<n;i++)
    {
        cout<<"|\t"<<i+1<<"\t|\t"<<dsa[i]<<"\t|\n";
    }
    cout<<"---------------------------------\n";
}

void Test::avg()
{
    int p=0;
    cout<<"\nAverage Score of Class = > ";
    for(i=0;i<n;i++)
    {
        if(dsa[i]!=-1)
        {
            sum=sum+dsa[i];
            p++;
        }

    }
    av=sum/p;
    cout<<av;
}

void Test::Ab_stud()
{
    int cnt=0;
    cout<<"\n\nTotal Number of Student Absent for DSA Test\n";
    cout<<"\nRoll No\t Marks\n";
    for(i=0;i<n;i++)
    {
        if(dsa[i]==-1)
        {
            cout<<i+1<<"\tAbsent\n";
            cnt++;
        }
    }
    cout<<"\n\tTotal_Absent_Student :=: "<<cnt;
}

void Test::HS_LS()
{
    int min=0;
    int max=0,rno=0,i=0;
    cout<<"\n\nHighest Score of the Class for DSA Subject are as follows..\n";
    max=dsa[i];
    for(i=0;i<n;i++)
    {
        if(dsa[i]==-1)
        {

        }
        else if(dsa[i]>=max)
        {
            max=dsa[i];
            rno=i;
        }
    }
    cout<<"\n\tDSA Highest Score: "<<"Roll No : "<<rno+1<<" Marks : "<<max;
    cout<<"\n\nLowest Score of the Class for DSA Subject are as follows..\n";
    rno=0;
    min=dsa[j];
    for(j=0;j<n;j++)
    {
        if(dsa[j]==-1)
        {

        }
        else if(dsa[j]<=min)
        {
         min=dsa[j];
         rno=j;
        }
    }
    cout<<"\n\tDSA Lowest Score: "<<"Roll No : "<<rno+1<<" Marks : "<<min;
}

int main()
{
    Test T;
    T.getdata();
    T.show();
    T.avg();
    T.Ab_stud();
    T.HS_LS();
    T.MS_score();
    cout << "\n\n\n!!!Good Bye!!!" << endl;
    return 0;
}




//COMPSA
#include<iostream>
using namespace std;


struct node{
    string name;
    int PRN;
    node *next;
};

class Club{
    public:
    node *head = new node; // president
    node *tail = new node; // sectery
    int total=2;


    Club(){
        head->next=tail;
        cout<<"ENter name of president \n=>";
        cin>>head->name;
        cout<<"\nENter PRN \n=>";
        cin>>head->PRN;
        cout<<"\nEnter name of secrtry\n=>";
        cin>>tail->name;
        cout<<"Enter PRN\n=>";
        cin>>tail->PRN;
        tail->next=NULL;
    }
    void add(){
        total++;
        node * n= new node;
        node *temp=head;
        cout<<"Enter the name of the student\n=>";
        cin>>n->name;
        cout<<"Enter the PRN of the student\n=>";
        cin>>n->PRN;
        while(temp->next!=tail){
            cout<<temp->PRN;
            temp=temp->next;
        }
        n->next=tail;
        temp->next=n;


    }
    void changePresident(){
        cout<<"Enter the name of the President";
        cin>>head->name;
        cout<<"ENter PRN";
        cin>>head->PRN;
    }
    void display(){
        cout<<endl;
        node *temp=head;
        while (temp!=NULL)
        {
            cout<<temp->name<<"\t"<<temp->PRN<<endl;
            temp=temp->next;
        }

    }
    void changeSecerty(){
        cout<<"Enter the name of the Sectery";
        cin>>tail->name;
        cout<<"ENter PRN";
        cin>>tail->PRN;
    }
    void cancel(){
        int target;
        cout<<"ENter prn number to be canceled";
        cin>>target;
        node *temp =head;
        node *del;
        if(head->PRN==target){
            cout<<"Every club needs an president\nLets elect new president";
            changePresident();
            return;
        }
        if(tail->PRN==target){
            cout<<"Every club needs an Secerty\nLets elect new president";
            changeSecerty();
            return;
        }
        while(temp->next->PRN!=target)
            temp=temp->next;
        del= temp->next;
        temp->next=temp->next->next;
        delete del;



    }
    void reverse(node *temp){
        if(temp==NULL){
            return;
        }
        else
        {
            reverse(temp->next);
            cout<<temp->name<<"\t"<<temp->PRN<<endl;
        }

    }
    void concat(Club b){
        tail->next=b.head;
    }
    int count(){
        int m=0;
        node * temp=head;
        while(temp!=NULL){
            temp=temp->next;
            m++;
        }
        return m;
    }

};
int main(){
    Club pinnacle;
    int input;
    do{
        cout<<"1.Add members\n2.Cancel Membership\n3.Display\n4.Display reverse\n5.Merge Clubs\n6.Count Total Members\n=>";
        cin>>input;
        switch (input)
        {
        case 1:
            pinnacle.add();
            break;
        case 2:
            pinnacle.cancel();
            break;
        case 3:
            pinnacle.display();
            break;
        case 4:
            pinnacle.reverse(pinnacle.head);
            break;
        case 5:
        {

            Club p2;
            int n;
            cout<<"\nHow many memebers do you want to add\n";
            cin>>n;
            for(int i =0;i<n;i++)
                p2.add();
            pinnacle.concat(p2);
            cout<<"\nMerged\n";
        }
            break;
        case 6:
            cout<<"\nNumber of member in club : "<<pinnacle.count()<<endl;
        break;
        default:
            break;
        }
    }
    while(1);

}






//sorting(bubble)Second Year
#include<iostream>
using namespace std;
class sort
{
 float m[30];
 int i,j,n;
public:
 void insert()
 {
  cout<<"ENTER NUMBER OF STUDENTS:"<<endl;
  cin>>n;
  cout<<"ENTER MARKS:"<<endl;
  for(i=0;i<n;i++)
  {
   cin>>m[i];
  }
 }
 void display()
 {
  cout<<"ENTERED MARKS ARE:"<<endl;
  for(i=0;i<n;i++)
  cout<<m[i]<<endl;
 }

 void bubble()
 {
  float temp;
  for(i=0;i<n-1 ;i++)
  {
   for(j=0;j<(n-1)-i;j++)
   {
    if(m[j]>m[j+1])
    {
     temp=m[j];
     m[j]=m[j+1];
     m[j+1]=temp;
    }
   }
  }
cout<<"TOP FIVE:"<<endl;
  for(i=n-1;i>=(n-5);i--)
  {
   cout<<m[i]<<endl;

  }
 }
 void selection()
 {
  int min;
  float temp;
  for(i=0;i<(n-1);i++)
  {
   min=i;
   for(j=i+1;j<n;j++)
   {
    if(m[j]<m[min])
    {
     min=j;
    }
   }
    temp=m[i];
    m[i]=m[min];
    m[min]=temp;

  }
  cout<<"TOP FIVE:"<<endl;
  for(i=n-1;i>= (n-5);i--)
  {
   cout<<m[i]<<endl;
  }
 }
};
int main()
{
 sort s;
 int ch,x;
 cout<<"LIST OF TOP FIVE STUDENTS:"<<endl;
 do
 {
 cout<<"1.CREATE \n2.DISPLAY\n3.TOP FIVE BY BUBBLE SORT\n4.TOP FIVE BY INSERTION SORT\nENTER CHOICE:"<<endl;
  cin>>ch;
  switch(ch)
  {
  case 1:
   s.insert();
   break;
  case 2:
   s.display();
   break;
  case 3:
   s.bubble();
   break;
  case 4:
   s.selection();
   break;
  default:
   cout<<"INVALID CHOICE!"<<endl;
  }
  cout<<"DO YOU WANT TO CONTINUE? 1.YES 2.NO"<<endl;
  cin>>x;
 }while(x==1);
 return 0;
}






//Job Queue
#include <iostream>
using namespace std;
#define size 5

class spq
{
    int f,r,job,djob;
    int simpq[size],prioq[size];
public:
    spq()
    {
     f=r=-1;
     job=djob=0;
     prioq[-1]=0;
    }

    int isQfull()
    {
        if(r==size-1)
            return 1;
        else
            return 0;
    }

    int isQempty()
    {
        if((f==-1)||(f>r))
            return 1;
        else
            return 0;
    }
    void simpqadd();
    void showsimpleQ();
    void delsimpleQ();
    void prioqadd();
    void delprioQ();
    void showprioQ();
};


void spq::simpqadd()
{
    cout<<"\nEnter the Job: ";
    cin>>job;
    if(isQfull())
        cout<<"\nSorry !! Queue is full....\n";
    else
    {
        if(f==-1)
        {
            f=r=0;
            simpq[r]=job;
        }
        else
        {
            r=r+1;
            simpq[r]=job;
        }
    }

}


void spq::delsimpleQ()
{
    if(isQempty())
        cout<<"\nSorry Q is empty...\n";
    else
    {
        djob=simpq[f];
        f=f+1;
        cout<<"\nDeleted job is: "<<djob;
    }
}


void spq::showsimpleQ()
{
    cout<<"\nThe simple Queue job are as follows....\n";
    int temp;
    for(temp=f;temp<=r;temp++)
    {
        cout<<"\t"<<simpq[temp];
    }
}


void spq::delprioQ()
{
    if(isQempty())
        cout<<"\nSorry Q is empty...\n";
    else
    {
        djob=prioq[f];
        f=f+1;
        cout<<"\nDeleted job is: "<<djob;
    }
}


void spq::showprioQ()
{
    cout<<"\nThe priority Queue job are as follows....\n";
    int temp;
    for(temp=f;temp<=r;temp++)
    {
        cout<<"\t"<<prioq[temp];
    }
}


void spq::prioqadd()
{
    int t=0;
    cout<<"\nEnter the job: ";
    cin>>job;
    if(isQfull())
        cout<<"\nSorry!! Priority Queue is full...\n";
    else
    {
        if(f==-1)
        {
            f=r=0;
            prioq[r]=job;
        }
        else if(job<prioq[r])
        {
         t=r;
         while(job<prioq[t])
         {
            prioq[t+1]=prioq[t];
            t=t-1;
         }
         t=t+1;
         prioq[t]=job;
         r=r+1;
        }
        else
        {
            r=r+1;
            prioq[r]=job;
        }
    }
}

int main()
{
    spq s1,s2;
    int ch;
    do
    {
     cout<< "\n\t!!!Operating System Job Queue!!!" << endl;
     cout<<"\n1.SimpleQ Add_Job\n2.SimpleQ Del_Job\n3.Show SimpleQ\n4.PrioQ Add_Job\n5.PrioQ Del_Job\n6.Show PrioQ";
     cout<<"\nEnter Your Choice:";
     cin>>ch;
     switch(ch)
     {
      case 1:s1.simpqadd();break;
      case 2:s1.delsimpleQ();break;
      case 3:s1.showsimpleQ();break;
      case 4:s2.prioqadd();break;
      case 5:s2.delprioQ();break;
      case 6:s2.showprioQ();break;
     }
    }while(ch!=7);
    return 0;
}






//Pizza
#include <iostream>
using namespace std;
#define size 5
class pizza
{
    int porder[size];
    int front,rear;
public:
    pizza()
    {
     front=rear=-1;
    }
    int qfull()
    {
     if((front==0)&&(rear==(size-1))||(front==(rear+1)%size))
         return 1;
     else
         return 0;
    }
    int qempty()
    {
        if(front==-1)
            return 1;
        else
            return 0;
    }
    void accept_order(int);
    void make_payment(int);
    void order_in_queue();
};
void pizza::accept_order(int item)
{
    if(qfull())
        cout<<"\nVery Sorry !!!! No more orders....\n";
    else
    {
        if(front==-1)
        {
            front=rear=0;
        }
        else
        {
            rear=(rear+1)%size;
        }
        porder[rear]=item;
    }
}

void pizza::make_payment(int n)
{
    int item;
    char ans;
    if(qempty())
        cout<<"\nSorry !!! order is not there...\n";
    else
    {
      cout<<"\nDeliverd orders as follows...\n";
      for(int i=0;i<n;i++)
      {
          item=porder[front];
          if(front==rear)
          {
               front=rear=-1;
          }
          else
          {
              front=(front+1)%size;
          }
          cout<<"\t"<<item;
      }
      cout<<"\nTotal amount to pay : "<<n*100;
      cout<<"\nThank you visit Again....\n";
    }
}

void pizza::order_in_queue()
{
    int temp;
    if(qempty())
    {
        cout<<"\nSorry !! There is no pending order...\n";
    }
    else
    {
        temp=front;
        cout<<"\nPending Order as follows..\n";
        while(temp!=rear)
        {
            cout<<"\t"<<porder[temp];
            temp=(temp+1)%size;
        }
        cout<<"\t"<<porder[temp];
    }
}
int main()
{
    pizza p1;
    int ch,k,n;
    do
    {
     cout<<"\n\t***** Welcome To Pizza Parlor *******\n";
     cout << "\n1.Accept order\n2.Make_payment\n3.Pending Orders\nEnter u r choice: ";
     cin>>ch;
     switch(ch)
     {
      case 1:cout<<"\nWhich Pizza do u like most....\n";
             cout<<"\n1.Veg Soya Pizza\n2.Veg butter Pizza\n3.Egg_Pizza";
             cout<<"\nPlease enter u r order: ";
             cin>>k;
             p1.accept_order(k);
             break;
      case 2:cout<<"\nHow many Pizza ?";
             cin>>n;
             p1.make_payment(n);
             break;
      case 3:cout<<"\n Following orders are in queue to deliver....as follows..\n";
             p1.order_in_queue();
             break;
     }
    }while(ch!=4);

    return 0;
}






//Sets
#include <iostream>
using namespace std;
class game
{
    int c,b,m,i,j,k,cnt;
    int setA[10],setB[10],setC[20],setD[20],setAB[20];
    public:
    game()
    {
        c=b=m=0;
        i=j=k=0;
        cnt=0;
    }
    void getdata();
    void show();
    void uni();
    void ninor();
    void common();
    void onlycrick();
    void onlybadminton();
};
void game::getdata()
{
    cout<<"\nHow many students in SE Comp :";
    cin>>m;
    cout<<"\nEnter count of student who plays cricket:";
    cin>>c;
    for(i=0;i<c;i++)
    {
        cout<<"\nEnter the roll no:";
        cin>>setA[i];
    }
    cout<<"\nEnter count of student who plays badminton:";
    cin>>b;
    for(i=0;i<b;i++)
    {
        cout<<"\nEnter the Roll No:";
        cin>>setB[i];
    }
}
void game::uni()
{
    int flag=0;
    for(i=0;i<c;i++)
    {
        setC[k]=setA[i];
        k++;
    }
    for(j=0;j<b;j++)
    {
        for(i=0;i<c;i++)
        {
            if(setB[j]==setA[i])
            {
                flag=1;
            }
        }
        if(flag==0)
        {
            setC[k]=setB[j];
            k++;
        }
        flag=0;
    }
    cout<<"\nThe Student who plays either Cricket or Badminton\n";
    for(i=0;i<k;i++)
    {
        cout<<"\t"<<setC[i];
    }
}

void game::common()
{
    for(i=0;i<c;i++)
    {
     setC[k]=setA[i];
     k++;
    }
    cout<<"\nThe student who plays both...\n";
    for(j=0;j<b;j++)
    {
     for(i=0;i<c;i++)
     {
      if(setB[j]==setA[i])
      {
        cout<<"\t"<<setA[i];
      }
     }
    }
}

void game::ninor()
{
    int z;
    int flag=0;
    for(i=0;i<c;i++)
    {
     setC[k]=setA[i];
     k++;
    }
    for(j=0;j<b;j++)
    {
     for(i=0;i<c;i++)
     {
      if(setB[j]==setA[i])
      {
        flag=1;
      }
     }
     if(flag==0)
     {
      setC[k]=setB[j];
      k++;
     }
     flag=0;
    }

    for(i=0;i<k;i++)
    {
        setD[cnt]=setC[i];
        cnt++;
    }
   cout<<"\n\nThe Student who plays neither Cricket nor Badminton...\n";
   flag=0;
   for(i=1;i<=m;i++)
   {
    for(j=0;j<cnt;j++)
    {
     if(setD[j]==i)
     {
      flag=1;
     }
    }
    if(flag==0)
    {
     setAB[z]=i;
     cout<<"\t"<<i;
     z++;
    }
    flag=0;
   }
}
void game::onlycrick()
{
    int flag=0;
    cout<<"\nThe student only plays Cricket...\n";
    for(i=0;i<c;i++)
    {
        for(j=0;j<b;j++)
        {
            if(setA[i]==setB[j])
            {
                flag=1;
            }
        }
        if(flag==0)
        {
            cout<<"\t"<<setA[i];
        }
        flag=0;
    }
}

void game::onlybadminton()
{
    int flag=0;
    cout<<"\nThe student only plays Badminton...\n";
    for(j=0;j<b;j++)
    {
        for(i=0;i<c;i++)
        {
            if(setB[j]==setA[i])
            {
                flag=1;
            }
        }
        if(flag==0)
        {
            cout<<"\t"<<setB[j];
        }
        flag=0;
    }
}
void game::show()
{
    cout<<"\nThe students who plays Cricket as follows..\n";
    for(i=0;i<c;i++)
    {
        cout<<"\t"<<setA[i];
    }
    cout<<"\nThe students who plays Badminton as follows..\n";
    for(j=0;j<b;j++)
    {
        cout<<"\t"<<setB[j];
    }
}
int main()
{
    game g;
    int ch;

     g.getdata();
     g.show();
     g.uni();
     g.ninor();
     g.common();
     g.onlycrick();
     g.onlybadminton();

    return 0;
}






//string
#include <iostream>
#include<cstring>
using namespace std;

int main()
{
    int n;
    char str1[50],str2[50],str3[50],y;
    cout<<"Enter Your String: ";
    cin>>str1;

    do
    {
        cout<<"\n 1. String Length";
        cout<<"\n 2. String Copy";
        cout<<"\n 3. String Concatenation";
        cout<<"\n 4. Sub-String";
        cout<<"\n 5. String Compare";
        cout<<"\n 6. Reverse";
        cout<<"\n Enter Your option: ";
        cin>>n;

        switch(n)
        {
        case 1:
            {
                int i=0;
                while(str1[i]!='\0')
                {
                    i++;
                }
                cout<<"Length of string is: "<<i;
                cout<<endl;
                break;
            }

        case 2:
            {
                int i=0;
                while(str1[i]!='\0')
                {
                    str2[i]=str1[i];
                    i++;
                }
                str2[i]=='\0';

                cout<<"The copied string is: "<<str2;
                cout<<endl;
                break;
            }
        case 3:
            {
                int i=0,j=0;
                cout<<"Enter first string: ";
                cin>>str1;
                cout<<endl<<"Enter second string: ";
                cin>>str2;
                while(str1[i]!='\0')
                {
                    i++;
                }
                while(str2[j]!='\0')
                {
                    str1[i]=str2[j];
                    j++;
                    i++;
                }
                str1[i]=='\0';

                cout<<endl<<"The concatenate strings are: "<<str1;
                cout<<endl;
                break;

            }
        case 4:
            {
                int i,j,flag = 0;

                cout<<"\n\n Enter the Main String: ";
                cin>>str1;

                cout<<"\n\n Enter the Sub-String: ";
                cin>>str2;

                j = 0;
                for(i=0; str1[i] != '\0'; i++)
                    {
                    if(str1[i] == str2[j])
                        {
                            while(str2[j] != '\0')
                                {
                                    i++;
                                    j++;
                                    if(str1[i] == str2[j])
                                        {
                                            i++;
                                            j++;
                                        }
                                    else
                                        {
                                            flag = 1;
                                            break;
                                        }
                                }
                        }
                    }
                if(flag == 1)
                    cout<<"\n\n\t String "<<str2<<" is not Sub-string of "<<str1;
                else
                    cout<<"\n\n\t String "<<str2<<" is a Sub-string of "<<str1;

                    cout<<endl;
                    break;
            }

        case 5:
            {
                int i=0,j=0,flag,len1,len2;
                cout<<"Enter first string: ";
                cin>>str1;
                cout<<endl<<"Enter second string: ";
                cin>>str2;
                while(str1[i]!='\0')
                {
                    i++;
                }
                while(str2[j]!='\0')
                {
                    j++;
                }
                len1=i;
                len2=j;

                if(len1==len2)
                {
                    for(i=0;str1[i]!='\0';i++)
                    {
                        if(str1[i]!=str2[i])
                        {
                            flag=1;
                            break;
                        }
                    }
                        if(flag==1)
                        {
                            cout<<"Strings are not equal";
                        }
                        else
                            cout<<"Strings are equal";

                }
                else
                {
                    cout<<"strings are not equal";
                }
                cout<<endl;
                break;
            }
        case 6:
            {
                int i=0,j;
                cout<<"Enter the string: ";
                cin>>str1;
                while(str1[i]!='\0')
                {
                    i++;
                }
                j=0;
                i=i-1;
                while(i>0)
                {
                    str2[j]=str1[i];
                    j++;
                    i--;
                }
                str2[j]='\0';

                cout<<"Reversed string is: "<<str2<<endl;
                break;
            }
        }
        cout<<endl<<"Enter if u wanna conitinue or not!?(y/n)";
        cin>>y;
    }while(y!='n');
}






