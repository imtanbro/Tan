#include<iostream>
#include<list>
using namespace std;
void display(list<int> &l3)
{
    list<int>::iterator p;
    for(p=l3.begin();p!=l3.end();p++)
    {
        cout<<*p;
    }
}
int main()
{
	int m,n,p,q,carry=0,sum,ans;
	cout<<"Enter number of bits for first binary number : ";
	cin>>m;
	cout<<"Enter number of bits for second binary number : ";
	cin>>n;
	list<int> l1;
	list<int> l2;
	int max,min;
	if(m>n)
	{ 
		max=m;
		min=n;
	}
	else if(n>m)
	{
		max=n;
		min=m;
	}
	else
	{ 
		max=m;
		min=m;
	}
	list<int> l3;
	cout<<"Enter the bits of first number from MSB to LSB:\n";
	for(int i=0;i<m;i++)
	{
		cin>>p;
		l1.push_back(p);
	}
	cout<<"\nFirst binary number entered is : ";
	display(l1);
	cout<<"\nEnter the bits of second number from MSB to LSB:\n";
	for(int i=0;i<n;i++)
	{
		cin>>q;
		l2.push_back(q);
	}
	cout<<"\nSecond binary number entered is : ";
	display(l2);
	for(int i=0;i<min;i++)
	{
		sum=(l1.back()+l2.back()+carry)%2;
		carry=(l1.back()+l2.back()+carry)/2;
		l2.pop_back();
		l1.pop_back();
		l3.push_back(sum);
	}
	while(l1.size()!=0)
	{
		sum=(l1.back()+carry)%2;
		carry=(carry+l1.back())/2;
		l1.pop_back();
		l3.push_back(sum);
	}
	while(l2.size()!=0)
	{   
		sum=(l2.back()+carry)%2;
		carry=(carry+l2.back())/2;
		l2.pop_back();
		l3.push_back(sum);
	}
	if(carry==1)
	{
		l3.push_back(carry);
	}
	cout<<"\nAddition is : ";
	while(l3.size()!=0)
	{
		ans=l3.back();
		cout<<ans;
		l3.pop_back();
	}
	cout<<endl;
	return 0;
}

Output:

Enter number of bits for first binary number : 3
Enter number of bits for second binary number : 
1
Enter the bits of first number from MSB to LSB:
1
1
1

First binary number entered is : 111
Enter the bits of second number from MSB to LSB:
1

Second binary number entered is : 1
Addition is : 1000

